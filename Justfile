set dotenv-load
set shell := ['bash', '-c']

SRC := "cml-exporter-installer.sh.in"
OUT := "cml-exporter-installer.sh"

FILES := ("src/cml-exporter src/cml_exporter/cml_exporter.py src/cml-exporter.service")

# Generate sed script to replace macros with file contents
SED_SCRIPT := OUT + ".sed"

@_:
    just --list

# Run tests
[group('qa')]
test:
    uv run -m pytest

[group('build')]
@_sed_script:
    echo "# Autogenerated sed script" > {{ SED_SCRIPT }}
    for file in {{ FILES }}; do \
        macro=$(basename ${file} | sed -e 's/-/_/g' -e 's/\./_/g'); \
        echo "/@$macro@/ {" >> {{ SED_SCRIPT }}; \
        echo "  r $file" >> {{ SED_SCRIPT }}; \
        echo "  d" >> {{ SED_SCRIPT }}; \
        echo "}" >> {{SED_SCRIPT }}; \
    done

[group('build')]
build: _sed_script
	sed -f {{ SED_SCRIPT }} {{ SRC }} > {{ OUT }}
	chmod +x {{ OUT }}

[group('build')]
build-clean:
    rm -f {{ SED_SCRIPT }}

[group('build')]
spotless: build-clean
    rm -f {{ OUT }}

# Update dependencies
[group('lifecycle')]
update:
    uv sync --upgrade

# Ensure project virtualenv is up to date
[group('lifecycle')]
install:
    uv sync

# Remove temporary files
[group('lifecycle')]
clean:
    rm -rf .venv .pytest_cache .mypy_cache .ruff_cache .coverage htmlcov
    find . -type d -name "__pycache__" -exec rm -r {} +

# Recreate project virtualenv from nothing
[group('lifecycle')]
fresh: clean install
